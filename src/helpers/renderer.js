import React from 'react';
import { renderToString } from 'react-dom/server';
import { StaticRouter } from 'react-router-dom';
import { Provider } from 'react-redux';
import { renderRoutes } from 'react-router-config';
import serialize from 'serialize-javascript'; // preventing xss attacks
import { Helmet } from 'react-helmet';
import { ChunkExtractor } from '@loadable/server';
import Routes from '../client/Routes';
import { isEmpty } from '../utils/utils';

const path = require('path');

/**
 * Code-splitting | loadable component
 * @Docs https://loadable-components.com/docs/server-side-rendering/
 * This is the stats file generated by webpack loadable plugin
 */
const webStats = path.resolve('public/dist/loadable-stats.json');

export default (req, store, context) => {
  /*
   * Attaching location along with query params to SSR router
   */
  const locationPath =
    req.path +
    (isEmpty(req.query)
      ? ''
      : `?${Object.keys(req.query)
          .map((key) => `${key}=${req.query[key]}`)
          .join('&')}`);
  /*
   * All html dom created by react-redux will be converted into string and is passed into content variable
   */
  const App = () => {
    return (
      <Provider store={store}>
        <StaticRouter location={locationPath} context={context}>
          <div>{renderRoutes(Routes)}</div>
        </StaticRouter>
      </Provider>
    );
  };

  const extractor = new ChunkExtractor({
    statsFile: webStats,
    publicPath: '/dist',
  });
  const jsx = extractor.collectChunks(<App />);
  const content = renderToString(jsx);

  // You can now collect your script tags
  const scriptTags = extractor.getScriptTags(); // or extractor.getScriptElements();
  // You can also collect your "preload/prefetch" links
  // const linkTags = extractor.getLinkTags(); // or extractor.getLinkElements();
  // And you can even collect your style tags (if you use "mini-css-extract-plugin")
  const styleTags = extractor.getStyleTags(); // or extractor.getStyleElements();

  /*
   * Helmet for SEO support
   */
  const helmet = Helmet.renderStatic();
  return `
    <!DOCTYPE html>
    <html lang="en">
      <head>
        <!--

        .--.
        |__| .-------.
        |=.| |.-----.|
        |--| ||  <3 ||
        |  | |'-----'|
        |__|~')_____('

        Hey there? didn't expect to see you here! By the way the developer is looking for a good job.
        Email me: lamamanjil@gmail.com or visit https://www.manjiltamang.com/

        -->

        ${helmet.meta.toString()}
        ${helmet.title.toString()}

        <meta charset="utf-8">
        <meta name="locale" content="en">
        <meta property="og:url" content="${req.protocol}://${req.get('host')}${req.originalUrl}">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
        ${styleTags}
      </head>
      <body>
        <div id="root">${content}</div>
        <script>
          window.INITIAL_STATE = ${serialize(store.getState())}
        </script>
        ${scriptTags}
      </body>
    </html>
  `;
};
